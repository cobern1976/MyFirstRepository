//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ДатаРождения(Парам01)","ДатаРождения","Допустим дата рождения 01.02.1980");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВозрастВМесяцахРавенТекущаяДата(Парам01,Парам02)","ВозрастВМесяцахРавенТекущаяДата","Тогда Возраст в месяцах равен 438 (текущая дата 31.08.2016)");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Допустим дата рождения 01.02.1980
//@ДатаРождения(Парам01)
Процедура ДатаРождения(Парам01) Экспорт
	Парам01='19800201';
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	Если Парам01<'19490101' Тогда
		ВызватьИсключение "Пенсионеров и вампиров на работу не принимать.";
	Иначе
		Контекст.Вставить("ДатаРождения", Парам01);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
//Тогда Возраст в месяцах равен 438 (текущая дата 31.08.2016)
//@ВозрастВМесяцахРавенТекущаяДата(Парам01,Парам02)
Процедура ВозрастВМесяцахРавенТекущаяДата(Парам01,Парам02) Экспорт
	РассчитанноеКоличествоМесяцев = КадровыйМодульСервер.ВозрастВМесяцах(Контекст.ДатаРождения);
	Если РассчитанноеКоличествоМесяцев <> Число(Парам01) Тогда
		ВызватьИсключение "Требуемое значение = " + Парам01 + "; Рассчитанное значение= " + РассчитанноеКоличествоМесяцев;
	КонецЕсли;
КонецПроцедуры

//окончание текста модуля